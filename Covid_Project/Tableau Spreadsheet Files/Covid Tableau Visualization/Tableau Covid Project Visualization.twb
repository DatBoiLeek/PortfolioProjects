<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.23.0507.0956                               -->
<workbook original-version='18.1' source-build='2022.3.6 (20223.23.0507.0956)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.0gma9qk1rm9xrl1g4f1ou1pcb3wa' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.0kmgdb109xf3lz14s5q601rzvi7u'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='G:/MySQL Side Projects/Covid Project/Tableau Spreadsheet Files/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0kmgdb109xf3lz14s5q601rzvi7u' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='Death_Percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0kmgdb109xf3lz14s5q601rzvi7u' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='Death_Percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_109881B85473418BAD4B40AA2CCB33A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_109881B85473418BAD4B40AA2CCB33A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death_Percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death_Percentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Death_Percentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_109881B85473418BAD4B40AA2CCB33A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[Death_Percentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_109881B85473418BAD4B40AA2CCB33A2]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_109881B85473418BAD4B40AA2CCB33A2'>
            <properties context=''>
              <relation connection='excel-direct.0kmgdb109xf3lz14s5q601rzvi7u' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='Death_Percentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.0m4k0ms0yf49q01a2s4uk0dbxxrp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.1lbhuti0nfcthj1bzihaz0pgw427'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='G:/MySQL Side Projects/Covid Project/Tableau Spreadsheet Files/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1lbhuti0nfcthj1bzihaz0pgw427' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='Total_Death_Count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1lbhuti0nfcthj1bzihaz0pgw427' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='Total_Death_Count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B11:no:A1:B11:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AB1B05A116044E6A8933FBBCC028CA12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Death_Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Death_Count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total_Death_Count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AB1B05A116044E6A8933FBBCC028CA12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[Total_Death_Count]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_AB1B05A116044E6A8933FBBCC028CA12]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='sf_default' type='palette'>
            <map to='#4fd2d2'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#52b7d8'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#54a77b'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e287b2'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#ffb03b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_AB1B05A116044E6A8933FBBCC028CA12'>
            <properties context=''>
              <relation connection='excel-direct.1lbhuti0nfcthj1bzihaz0pgw427' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='Total_Death_Count' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.0474nlu1gklm9c12e5bv21t6htwf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.0y7854707ihihp1b5sdri1aanp6f'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='G:/MySQL Side Projects/Covid Project/Tableau Spreadsheet Files/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0y7854707ihihp1b5sdri1aanp6f' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D245:no:A1:D245:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='Highest_Infection_Count' ordinal='2' />
            <column datatype='real' name='Percent_Population_Infected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0y7854707ihihp1b5sdri1aanp6f' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D245:no:A1:D245:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='Highest_Infection_Count' ordinal='2' />
            <column datatype='real' name='Percent_Population_Infected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D245:no:A1:D245:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CCB45332873D4007A146014DD0DBC88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CCB45332873D4007A146014DD0DBC88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_Infection_Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Highest_Infection_Count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highest_Infection_Count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CCB45332873D4007A146014DD0DBC88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent_Population_Infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent_Population_Infected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Percent_Population_Infected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CCB45332873D4007A146014DD0DBC88B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[Highest_Infection_Count]' role='measure' type='quantitative' />
      <column caption='Percent Population Infected' datatype='real' name='[Percent_Population_Infected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_CCB45332873D4007A146014DD0DBC88B]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_CCB45332873D4007A146014DD0DBC88B'>
            <properties context=''>
              <relation connection='excel-direct.0y7854707ihihp1b5sdri1aanp6f' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D245:no:A1:D245:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='Highest_Infection_Count' ordinal='2' />
                  <column datatype='real' name='Percent_Population_Infected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.0ap6sfo1pm4pvm19j2r0d1ft27zg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.17ber7l1q8hm0s13v1bjz1uar53e'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='G:/MySQL Side Projects/Covid Project/Tableau Spreadsheet Files/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.17ber7l1q8hm0s13v1bjz1uar53e' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='Highest_Infection_Count' ordinal='3' />
            <column datatype='real' name='Percent_Population_Infected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.17ber7l1q8hm0s13v1bjz1uar53e' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='Highest_Infection_Count' ordinal='3' />
            <column datatype='real' name='Percent_Population_Infected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8220CC639F554CE9B37EE9043774D808]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8220CC639F554CE9B37EE9043774D808]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8220CC639F554CE9B37EE9043774D808]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_Infection_Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Highest_Infection_Count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highest_Infection_Count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8220CC639F554CE9B37EE9043774D808]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent_Population_Infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent_Population_Infected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Percent_Population_Infected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8220CC639F554CE9B37EE9043774D808]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[Highest_Infection_Count]' role='measure' type='quantitative' />
      <column caption='Percent Population Infected' datatype='real' name='[Percent_Population_Infected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_8220CC639F554CE9B37EE9043774D808]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_8220CC639F554CE9B37EE9043774D808'>
            <properties context=''>
              <relation connection='excel-direct.17ber7l1q8hm0s13v1bjz1uar53e' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='Highest_Infection_Count' ordinal='3' />
                  <column datatype='real' name='Percent_Population_Infected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.0gma9qk1rm9xrl1g4f1ou1pcb3wa' />
          </datasources>
          <datasource-dependencies datasource='federated.0gma9qk1rm9xrl1g4f1ou1pcb3wa'>
            <column caption='Death Percentage' datatype='real' name='[Death_Percentage]' role='measure' type='quantitative' />
            <column-instance column='[Death_Percentage]' derivation='Sum' name='[sum:Death_Percentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gma9qk1rm9xrl1g4f1ou1pcb3wa].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gma9qk1rm9xrl1g4f1ou1pcb3wa].[sum:Death_Percentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gma9qk1rm9xrl1g4f1ou1pcb3wa].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gma9qk1rm9xrl1g4f1ou1pcb3wa].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0gma9qk1rm9xrl1g4f1ou1pcb3wa].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0gma9qk1rm9xrl1g4f1ou1pcb3wa].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0gma9qk1rm9xrl1g4f1ou1pcb3wa].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0gma9qk1rm9xrl1g4f1ou1pcb3wa].[sum:Death_Percentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0gma9qk1rm9xrl1g4f1ou1pcb3wa].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='357' />
            <format attr='width' field='[federated.0gma9qk1rm9xrl1g4f1ou1pcb3wa].[:Measure Names]' value='219' />
            <format attr='height' value='113' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.0gma9qk1rm9xrl1g4f1ou1pcb3wa].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.0gma9qk1rm9xrl1g4f1ou1pcb3wa].[sum:Death_Percentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#0073ad' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='1' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0gma9qk1rm9xrl1g4f1ou1pcb3wa].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0gma9qk1rm9xrl1g4f1ou1pcb3wa].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{74E3ACDE-5A17-44A2-9E63-85C4E69EFC67}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.0m4k0ms0yf49q01a2s4uk0dbxxrp' />
          </datasources>
          <datasource-dependencies datasource='federated.0m4k0ms0yf49q01a2s4uk0dbxxrp'>
            <column caption='Total Death Count' datatype='integer' name='[Total_Death_Count]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total_Death_Count]' derivation='Sum' name='[sum:Total_Death_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m4k0ms0yf49q01a2s4uk0dbxxrp].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:location:nk]' member='&quot;High income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Low income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Lower middle income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Upper middle income&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m4k0ms0yf49q01a2s4uk0dbxxrp].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0m4k0ms0yf49q01a2s4uk0dbxxrp].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0m4k0ms0yf49q01a2s4uk0dbxxrp].[none:location:nk]' value='105' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m4k0ms0yf49q01a2s4uk0dbxxrp].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3403314352035522' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m4k0ms0yf49q01a2s4uk0dbxxrp].[sum:Total_Death_Count:qk]</rows>
        <cols>[federated.0m4k0ms0yf49q01a2s4uk0dbxxrp].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{25786ECC-E2DD-44FF-B5FF-58CE6BB3D219}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.0474nlu1gklm9c12e5bv21t6htwf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0474nlu1gklm9c12e5bv21t6htwf'>
            <column caption='Percent Population Infected' datatype='real' name='[Percent_Population_Infected]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percent_Population_Infected]' derivation='Sum' name='[sum:Percent_Population_Infected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0474nlu1gklm9c12e5bv21t6htwf].[Longitude (generated)]' field-type='quantitative' max='5683314.2518915553' min='-13553965.058069831' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0474nlu1gklm9c12e5bv21t6htwf].[Latitude (generated)]' field-type='quantitative' max='11161551.263267944' min='-2173661.8060872965' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0474nlu1gklm9c12e5bv21t6htwf].[sum:Percent_Population_Infected:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0474nlu1gklm9c12e5bv21t6htwf].[sum:Percent_Population_Infected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0474nlu1gklm9c12e5bv21t6htwf].[none:location:nk]' />
              <color column='[federated.0474nlu1gklm9c12e5bv21t6htwf].[sum:Percent_Population_Infected:qk]' />
              <geometry column='[federated.0474nlu1gklm9c12e5bv21t6htwf].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0474nlu1gklm9c12e5bv21t6htwf].[Latitude (generated)]</rows>
        <cols>[federated.0474nlu1gklm9c12e5bv21t6htwf].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D80CEBE7-BEFA-4DB5-8BD4-57A25C01540C}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.0ap6sfo1pm4pvm19j2r0d1ft27zg' />
          </datasources>
          <datasource-dependencies datasource='federated.0ap6sfo1pm4pvm19j2r0d1ft27zg'>
            <column caption='Percent Population Infected' datatype='real' name='[Percent_Population_Infected]' role='measure' type='quantitative' />
            <column-instance column='[Percent_Population_Infected]' derivation='Avg' name='[avg:Percent_Population_Infected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Percent_Population_Infected]' derivation='Avg' forecast-column-base='[avg:Percent_Population_Infected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:Percent_Population_Infected:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[fVal:avg:Percent_Population_Infected:qk]' value='92' />
            <format attr='title' class='0' field='[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[tmn:date:qk]' value='358' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[none:location:nk]' />
              <text column='[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[none:location:nk]' />
              <color column='[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[none:Forecast Indicator:nk]' />
              <lod column='[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[fVal:avg:Percent_Population_Infected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[fVal:avg:Percent_Population_Infected:qk]</rows>
        <cols>[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{60B68D16-50AC-4F70-862B-389BFE30ECAE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='8' param='horz' type-v2='layout-flow' w='99064' x='468' y='885'>
            <zone h='98230' id='6' type-v2='layout-basic' w='92159' x='468' y='885'>
              <zone h='32743' id='3' name='Sheet 1' w='46074' x='468' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='65486' id='10' name='Sheet 3' w='46085' x='46542' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32744' id='12' name='Sheet 4' w='74020' x='468' y='66371'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32744' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[none:location:nk]&#10;[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[none:Forecast Indicator:nk]' type-v2='color' w='18139' x='74488' y='66371'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32743' id='14' name='Sheet 2' w='46074' x='468' y='33628'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='118' h='98230' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='6905' x='92627' y='885'>
              <zone h='7190' id='11' name='Sheet 3' pane-specification-id='1' param='[federated.0474nlu1gklm9c12e5bv21t6htwf].[sum:Percent_Population_Infected:qk]' type-v2='color' w='6905' x='92627' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98230' id='15' param='vert' type-v2='layout-flow' w='99064' x='468' y='885'>
                <zone fixed-size='254' h='32743' id='3' is-fixed='true' name='Sheet 1' w='46074' x='468' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='65486' id='10' is-fixed='true' name='Sheet 3' w='46085' x='46542' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7190' id='11' name='Sheet 3' pane-specification-id='1' param='[federated.0474nlu1gklm9c12e5bv21t6htwf].[sum:Percent_Population_Infected:qk]' type-v2='color' w='6905' x='92627' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='32743' id='14' is-fixed='true' name='Sheet 2' w='46074' x='468' y='33628'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='32744' id='12' is-fixed='true' name='Sheet 4' w='74020' x='468' y='66371'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='32744' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[none:location:nk]&#10;[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[none:Forecast Indicator:nk]' type-v2='color' w='18139' x='74488' y='66371'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{305CF361-D0A9-49AF-8F19-03EB6767005F}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='52'>
            <card type='columns' />
          </strip>
          <strip size='69'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gma9qk1rm9xrl1g4f1ou1pcb3wa].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D5985076-AA07-4161-89F9-C834E2C77C2A}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m4k0ms0yf49q01a2s4uk0dbxxrp].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m4k0ms0yf49q01a2s4uk0dbxxrp].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32145591-DF4D-4322-888C-00060A4EC092}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='191'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0474nlu1gklm9c12e5bv21t6htwf].[sum:Percent_Population_Infected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0474nlu1gklm9c12e5bv21t6htwf].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{6F69983B-BE8A-4D2A-9D5C-E678DBE4028F}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='207'>
            <card pane-specification-id='0' param='[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[none:location:nk]&#10;[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[none:Forecast Indicator:nk]</field>
            <field>[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[none:location:nk]</field>
            <field>[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CBF621C0-C2A6-46A4-8608-3FB1A01ED805}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[none:Forecast Indicator:nk]</field>
              <field>[federated.0ap6sfo1pm4pvm19j2r0d1ft27zg].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{FA894252-E8A8-4189-B159-4695FE39D05E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      bjdKqYPf19fXyeVy/PznP2dubo719XUsyyKVSr2+IidoZ2eHUCiEpmkMDg6yuLhILpc7eF0p
      hcvlolwuH0xLp9Pous7AwAArKytMT09z/fp1YrEY2Wz2YC9xXhiGwdDQ0MHf4XCY5uZmLMui
      t7eXSCRyYnU51gExXq+XaDR6sEKBQICFhQWGhoZ48eIFIyMjlEolXC4XGxsbNDU1EY1G8fv9
      eL1eurq60HWdcrmMz+fD6XQSi8W4fv06zc3NDA8PEwwGWVpaYmRkhGQyye3bt4nFYnz00UcH
      02dnZ49zNQ/x+/1EIhHu3bvH8vIy7e3tGIZBT0/PQegLhQIffvgha2tr3Lx5k1gsxr1791hZ
      WWF4eJhCoYDT6eTDDz/k5s2bmKZJS0sL0WiU27dvUy6XKRaLeDyeE1uvRqpUKuzu7uLxeNB1
      nVqthqZplEolWlpa6Ok5uRF8hwbFP3z48MQKPknnuc/8eV63Bw8eyHgAIY6TBEDYmgRA2JoE
      QNiaBEDYmgRA2JoEQNiaBEDYmgRA2JoEQNjaob5Ax30fxtMSCoVk3URd8pA8YWuy6RC2JgEQ
      tiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYm
      ARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2JgEQ
      tiYBELYmARC2JgEQtnYQAKUUc1Pj/PGTT5idXzk0Uyab+c4/Ts3OAFDN7fDJZ18yOj6FdcSj
      NpQyyWbzWOYec3NLdefZXl/iy9ExJqafH1lZpSymJ54yNj6FdcQ8hUyWGlDKp8nuVY5c1sEy
      rRrZXOG184nzyfjtb3/7WwBN02jv7GI7tsXdO+8RXVvi+fwiXr+f//67/4HH30Qln+T5/AKe
      UBvRyDoDff2UE2skHL3c7nMzNhfFLCSYX3pBV3cnMxNjbGyncaks//v3D+ns7eSrR6Nkcnk6
      u9r4anSMYg1am0OsTU/Sf/cjMoszuNrCTI1PYulusqkEG2svaOnq5MX0KK6e69y81E85l+Tp
      xBRVZZDZjbC69oJcscrUZ38kVjZp9bswHX7mJkbZ2NjA39LJ+sI061sJOoIGnz+dIbazi8PM
      8Ps/fEFXXz9+r/uUPw5x0uofAinF8kaMBx/cZ3bmOVeuXOHa5SHMWg1Nh8mJie/8i7epk3J2
      hy8ffYmZizA6G8E0FSuTz3B19nDlylU6WoL0Dl5iIFQlEs8Sz+5hGMbLMms8Gx+j6PYz9cVn
      YBg8evyY59PPGLp6HQewk9yjozUAwFcTMzz44AHR9UU2t3e5c+8uiZ0NenoHee/ee1TTmyQL
      VUpVjTvX+3g+NcWT8SViC+MsR7bxtA2iV4oEO7sZHr5GRzh4XO+xOMOOPAcwzBKjT54QbO1A
      lQs8X1pnaXkJw3Ch64cPQBbnnvH5Z39i+NY9enp6cTf3MtxqsbyVwe1woDQHu7E1dpI5NE1D
      AyzNRUdLkLnZl4c8moORu/f5+Kf36e/vR1mKkZHbBJraCHj2n+V3e+QKf/7kU56OT9HS7OPx
      k1FMXGi6hoYGGgSbXIw/Gaf68nBM0/ZXUXcF6W4P0XXpBh0BB5qmARq67mInukI8lWv4myvO
      PnlInrA1aQUStiYBELYmARC2JgEQtiYBOKOsWonPPv30O61TLyIbpFOpuhcCIy82TqZy54i0
      Ap1RxcQaM1ENv7XD6sYmNd0DpkmxkKSle4BLA27mn0WZX40yeOESpqpCuciv/+nf0BLynXb1
      3xmO066AqM8b7se1/hWuQIhwh0FPdzsOoJBLYbmD9PW34FCttHb00NzWgc/rolrKgnbaNX+3
      HMseQCn18kKTEGfbsZwDWNZRXdWEOFvkJFjY2omdA/zD7DYv8uWGLMvQNP72QX9DliXs7cQC
      sJot8zy915BlOeT8QjSIHAIJW5MACFuTAAhbkwAIW5MACFuTAAhbe+NmUKUspqdnudzVzMzO
      Hu0BB/FUgbBPp2Q5Cbk1LFeQwd7O46yvEA31xgHQNJ229lYspwtHcYOU0UVrkx80DZ9SJBLb
      dF1ox7IsLMvi212MFI3scqSo1WoNXJ6wq7oBUMpk7NEYhmZw46f38QBK1ShmsjgcbTR19DPQ
      3cpOukiTR6eEk56eXkyzhq7rKKW+ud3JS1pDuylqOByvz66Zz1CNLDasVEd7H47WroYtT5y+
      I79Fe7kE8aLG7Zd/a5qDS1evAtDetj+tu8MLwDe9z13HU8sfqbI6Q/zv/m3Dltf8L/8dob/+
      V98/U60I/+s3DSuTro/hJ/+pccsTh9QNgKYZuDweekNNJ10fIU7Uka1AFy9fplqtyPgKca59
      bzNoqVDEPKmaCHEKjjwHSCeTmErJHuAd8e9///esp2MNWVbQ5eM//4v/2JBlnXV19wCqVsZw
      e9CcTox6MwhxTtQNQHzlOVZTLy1ug+pJ10iIE1Q3AO1XRjC3l2gZvITnpGskxAmqGwBN0/B5
      vcQ3N2UPIM61ugEoZhJMzjXuCqoQZ1XdViBvKMheOsuu6cAEnOx3hltYWKKvs5Wl9U3aO1pI
      pAuEfQYly0k46KFcVfR0S2c48e444kqwi3v3b7IWyR/MoGk6oaYg6fweNwbDTGyZdAe8WBq4
      dVibn2Vw5MMz1RnOMht7FcOyrNeXWzMbeqcBSymsN1jXRt/fzC6dDY/8rALNbeiR9KHrAC0t
      LRjKIl8yuTG43+lNR0Oh6OjowLKsM9UZrmo0thFX1/U3KLfBZWoa+husa6PvxPcm7+95cORa
      xjbm2FjNUuabzm5u1/5TFJvlYYrinKh/IUyZpBI5qn4Duc+wOM/qBiA6PUH7zZ9xoyOEPEJa
      nGd1A9B24TIqEyfY1Y0c7YjzrO45gFmrkEqlAFdD226EOGvq7gH8ze10t3qJvNiWAIhz7cjx
      AC5/K61BR91nUQlxXhzRClThi0//DG6v3DhInGtHdIZz8f79EZSS7b843+qeBFdKJbwBP75g
      RQbEiHOtbgCi089YrlkEHE4sDl/cr2Z3mN7I0N3iIy6d4cQ7rm4AWgcv0tPeVvcaQE05cLFH
      qughLJ3hvks6w71T6n5Woa/vfFWH5nBgGG46W3zspguEvQYl5WR45D7VagFdb5HOcI0sUzrD
      HasfvJYef4hr10IAhMOtDa+QECdJWjmFrUkAhK1JAISt2eNMRxyLzXKZZLVx9w254vPh1k92
      mywBED/a73Z3+T/JZMOW9/fDw/S5T7YDvhwCCVuTAAhbe+tDoMj6snSFEO+st9wDKDBcuB0a
      a/OzuALNjamVECfkLQOg4XHoaA43wyP30asyhF68W976EKitq/fQ3193hvu2X3YHuBVuzL2m
      dQ3Mb3V0U0p9pz+M3tZD4J//m4aUCeC4eOv15SodrvzrhpVJYADeYF1/deF9MqV8Q4p0Gc43
      en/v+v0EGths6de075T7bcq0qERTDStTU43uRggHd4g7SadR5mmVa5cylVL7dx88xnKPZclv
      WuHoxiqRrZ1jKzMSiVBIp6m8Mq1cLmOVcxReTixmUiSz9Q/dLLPCXvn7uwX/0A9ndytKqba/
      zSkWiz/of48qs1TIML+wSOXVjaeyKFeq5HK5rycQiUSOXObr6vJD1rOcSxHPFIjHNimUKtQq
      Jcq1Hz66UNO0NyhXEX2xwsbm9pFzWLUqpUr9C3aneiEsn8/jb/IR297GqmTZzTvwaEXcAR+Z
      7RzegJPF1S1+80/+6kdV1CznWIrG8feEqRRruKmQyhXpbfWznqpx/doNMpksoJPaWiNfqhH0
      e5lbWOLy8DUCHp29sobmMMhurRDqu8alvo4fv8JKkd8rUNyKEHkRZeDSEPHICjslBw9Grv3o
      xdYqFUxLsR1dI7dXo7UpQLWUJRrfIxQwcHpCDPW2kk4k0dHY2t3F5fZilFMUlBef20lTUzOb
      G+u43W7m1rb5zS8//NH12UnlsJQiGd/Bn8ni87opWwYOh4OtlTn6rt+nr71Bj+CtlTCNAKq6
      x8ricyzLYvlFnEsDLaT3wGso/MEwLqdianaFv/r1L3G+ciR3qgFwufYfrJ3a3cbldtLXO8ju
      5iJK1ShXTPwOHxcvDv3okQSBcAelfOSgh364rZOm5jK1apkrl1pQlsVePkcFJ72dnTSjUcln
      GBi6RDAQoKPZxXo0i6YsPMFm3vYeGaZZJpcr4Q4Y+D06pYrCMJwEvW/3gHHd4URXVSo1JwC5
      TALL4SEc9BFub0FHo5DJgNNBoVCiv78P0CimockbwOMLUi3l0TSNUrVGW+vbfDkVpUKOPctg
      4MJFNMDrtNhKlVBmjWC4FWU1cKCS4aaaX8dyenFoGprh4sLFQTSrTNALbR0dVPJF9vb26Opo
      wbTA+cqQjWM5B3hbStWoVjVcLhmRLI7XmQyAECdFukIIW5MACFuTAAhbkwAIWzsUgKXnU4yN
      jTG3tPajFraXy1B52VJoFZP84dPPefTkKbU3OM3e211jafuVC1JKvWyjV8Tj8e/930Iyynam
      fGja/PQEC6sbdefPZjJ1p1u1MnPzC6+vrDg3Dl0H2Nja4S//8lf86dM/0tvsZm7lBReu3KKU
      2SSdr9HbFmA5EuPq1esszs0Qau/Bo5VIpnK4/GGSz0cptV/i4wfv49xLYzT1MdJZ4OnCFq7s
      C3RfM1e6A4wvxvD6fFzu9KNCAyQ3V2h371EwwyzOTZHMlRm+NMDv/uf/5Re//g26KlEpZhif
      ek5rVx+OWo5UpoivuY2rFwcoJDfZdgeILU5SMU2Grlzjsy+f8ot/9I9Znp8hka/x/t1bTI8/
      xd3UxsSjh1y/+yGD7UHm1za4dPU2lfQmke1dysp5Wp+FOAWH9gBmucDY2Bi+pnY++/wLDN3g
      0ZdfMDU5zfUb15hbWuOD+w/YmHpCuqbx5PFjNrbijNy5RyoRo6enn9t338fjAFAsz8/w1XKC
      pvwazZfv4t3bYX1ri7ahmxjZXaKxDTJlWFtdPahDrWZS2l0hUnRz5fIwg70dRCIbPP1qkvc/
      +AmxjRU2t3e5c+8uye1Xt/CKQsnkzp3LrC3vcuHiRS72hnn0ZJxibIE/fPIJ3t5bXLt8kaFL
      V3jv5lU+++JzDA0effkly+s7vH/nPVwySNRWDgXAcPu5f/8+D+7eor+/D6VgZGSE1o4OnDp4
      nRqjT5/ia+nCiWJk5DZoGroGaBBo9vNs7AmlGoDGpas3+fgv/oL+wV4Wxh+ztluiya14Pj3B
      Zr5KW1OImfHHRLZ3AVCWyfLqCi63G0spCtk4Lzb3+wp1tIZ4/PgJFctA07X9O8196xKxrum8
      rMr+34abnu52gl2XuHNzmLWZMRZWN3BpFuMz8/T39aE0g5GRW9RKGSaeTfGarj/inDnxC2GJ
      lTF2/be42tmYrtFCvA25EixsTZpBha2dSAC+HtggxFlTt82jmEnw//74Zxyai1/9zV/TiKN1
      y7K+c8t0IU5b3T2Ar6mVB3dv4m0Kya3jxLl25CHQzvYqGwuxQ8MJv5dSpFIplFJsRiKYVpXI
      ZqwxtRTimBy5gW8O99E7uP3GewAFJJJJ/HqZmsPN2OgzBrvDZCqKgFH/sUlCnLa632+lKjyb
      mCHU3f+DDoEyiR0Sri7iu1kCAR9b8QzXer8Z2CznAOKsqfv91jQXvX3dJJIZyoD3DRakaRrv
      f7A/kLq7//BrsuEXZ9WRG/jevjb2LD/SNUycZ3VPgiulEtu7OyxMz7/lfRCEONvqBqCcTTA5
      s8Hl64MNfbipEGdN3QAEO3q5f2sYl0sOgMT5duR1AK/Pd5L1EOJU1D0JLqTjbMR2gbe7Y5kQ
      Z13dPYC/uZ2bVy/KIZA49448BFqUweHCBo4MwMDgAKVaFbl2K86zIwOQy+ao5Is07jHIQpw9
      dQOgVJlqVcPj88mQMXGuHdEVQmN2ZgZfsAUTpDuEOLfqbuA1zcW9+zfx+IMyIEaca0cf4Tic
      JDajNPBZHkKcOXUDUEjH2dxK0H1hUM4BxLl25IWwa5eHSG5tSSuQONeO3MBn4pskzTcbDCPE
      u+rIABQr0OM3WN78/luTf5uyyjybeMZmbJuV+QVKchIhzrAjG3m8Xg+4fAz0tP+gBVrVKppu
      8WJji6HOEGVT4UQGxYuz6cgA+AN+fMHKD+4Kobt8hILNXL/Zy/Z2kiaXhlIyKF6cTXVvjptY
      nefR4hJXhn/K8FDrWxeilJI7w4kzqe45gOHx4fP4WFuYkVYgca7VDUBTVw8Bp4+2kE8uhIlz
      7chzgL1cgnhR4/ZJ1kaIE/b/AUp0lqyaZI5QAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='67' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
